CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}


** Please be patient while the chart is being deployed **

1. Get the qbittorrent URL:

{{- if .Values.ingress.enabled }}

  You should be able to access your new qbittorrent installation through

  http://{{- .Values.ingress.hostname }}/

{{- else if eq .Values.service.type "LoadBalancer" }}

  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        Watch the status with: 'kubectl get svc --namespace {{ include "common.names.namespace" . }} -w {{ include "common.names.fullname" . }}'

  export SERVICE_IP=$(kubectl get svc --namespace {{ include "common.names.namespace" . }} {{ include "common.names.fullname" . }} --template "{{ "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}" }}")

{{- $port:= .Values.service.ports.http | toString }}
  echo "qbittorrent URL: http://$SERVICE_IP{{- if ne $port "80" }}:{{ .Values.service.ports.http }}{{ end }}/"

{{- if not (include "qbittorrent.rootURL" .)}}

WARNING: You did not specify a Root URL for qbittorrent. The rendered URLs in qbittorrent may not show correctly. In order to set a root URL use the rootURL value.
{{- end }}

{{- else if eq .Values.service.type "ClusterIP" }}

  echo "qbittorrent URL: http://127.0.0.1:8080/"
  kubectl port-forward --namespace {{ include "common.names.namespace" . }} svc/{{ include "common.names.fullname" . }} 8080:{{ .Values.service.ports.http }}

{{- end }}

{{- if eq .Values.service.type "NodePort" }}

  Or running:

  export NODE_PORT=$(kubectl get --namespace {{ include "common.names.namespace" . }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "common.names.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ include "common.names.namespace" . }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "qbittorrent URL: http://$NODE_IP:$NODE_PORT/"

{{- end }}

2. Get your qbittorrent login credentials by running:

  echo Username: 
  echo Password: $(kubectl get secret --namespace {{ include "common.names.namespace" . }} {{ template "qbittorrent.secretName" . }} -o jsonpath="{.data.admin-password}" | base64 -d)


{{- include "common.warnings.rollingTag" .Values.image }}
{{- include "common.warnings.rollingTag" .Values.volumePermissions.image }}
